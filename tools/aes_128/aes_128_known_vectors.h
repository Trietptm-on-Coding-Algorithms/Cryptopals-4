#ifndef _AES_128_KNOWN_VECTORS_H_
	#define _AES_128_KNOWN_VECTORS_H_

#define AES_128_NUM_ROUNDS (10)
#define AES_128_BLOCK_LEN  (16)

/*
 *	HIGH-LEVEL ENCRYPTION AND DECRYPTION ALGORITHM TEST VECTORS
 *  taken from Federal Information Processing Standards Publication 197
 */

static const unsigned char  aes_128_encrypt_test_plaintext[AES_128_BLOCK_LEN] = {
	0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff
};


static const unsigned char  aes_128_encrypt_test_key[AES_128_BLOCK_LEN] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
};


static const unsigned char  aes_128_encrypt_test_ciphertext[AES_128_BLOCK_LEN] = {
	0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a
};


static const unsigned char  aes_128_encrypt_test_states[53*AES_128_BLOCK_LEN] = {
/* round[ 0].input */ 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff,
/* round[ 0].k_sch */ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
/* round[ 1].start */ 0x00, 0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0xa0, 0xb0, 0xc0, 0xd0, 0xe0, 0xf0,
/* round[ 1].s_box */ 0x63, 0xca, 0xb7, 0x04, 0x09, 0x53, 0xd0, 0x51, 0xcd, 0x60, 0xe0, 0xe7, 0xba, 0x70, 0xe1, 0x8c,
/* round[ 1].s_row */ 0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
/* round[ 1].m_col */ 0x5f, 0x72, 0x64, 0x15, 0x57, 0xf5, 0xbc, 0x92, 0xf7, 0xbe, 0x3b, 0x29, 0x1d, 0xb9, 0xf9, 0x1a,
/* round[ 1].k_sch */ 0xd6, 0xaa, 0x74, 0xfd, 0xd2, 0xaf, 0x72, 0xfa, 0xda, 0xa6, 0x78, 0xf1, 0xd6, 0xab, 0x76, 0xfe,
/* round[ 2].start */ 0x89, 0xd8, 0x10, 0xe8, 0x85, 0x5a, 0xce, 0x68, 0x2d, 0x18, 0x43, 0xd8, 0xcb, 0x12, 0x8f, 0xe4,
/* round[ 2].s_box */ 0xa7, 0x61, 0xca, 0x9b, 0x97, 0xbe, 0x8b, 0x45, 0xd8, 0xad, 0x1a, 0x61, 0x1f, 0xc9, 0x73, 0x69,
/* round[ 2].s_row */ 0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
/* round[ 2].m_col */ 0xff, 0x87, 0x96, 0x84, 0x31, 0xd8, 0x6a, 0x51, 0x64, 0x51, 0x51, 0xfa, 0x77, 0x3a, 0xd0, 0x09,
/* round[ 2].k_sch */ 0xb6, 0x92, 0xcf, 0x0b, 0x64, 0x3d, 0xbd, 0xf1, 0xbe, 0x9b, 0xc5, 0x00, 0x68, 0x30, 0xb3, 0xfe,
/* round[ 3].start */ 0x49, 0x15, 0x59, 0x8f, 0x55, 0xe5, 0xd7, 0xa0, 0xda, 0xca, 0x94, 0xfa, 0x1f, 0x0a, 0x63, 0xf7,
/* round[ 3].s_box */ 0x3b, 0x59, 0xcb, 0x73, 0xfc, 0xd9, 0x0e, 0xe0, 0x57, 0x74, 0x22, 0x2d, 0xc0, 0x67, 0xfb, 0x68,
/* round[ 3].s_row */ 0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
/* round[ 3].m_col */ 0x4c, 0x9c, 0x1e, 0x66, 0xf7, 0x71, 0xf0, 0x76, 0x2c, 0x3f, 0x86, 0x8e, 0x53, 0x4d, 0xf2, 0x56,
/* round[ 3].k_sch */ 0xb6, 0xff, 0x74, 0x4e, 0xd2, 0xc2, 0xc9, 0xbf, 0x6c, 0x59, 0x0c, 0xbf, 0x04, 0x69, 0xbf, 0x41,
/* round[ 4].start */ 0xfa, 0x63, 0x6a, 0x28, 0x25, 0xb3, 0x39, 0xc9, 0x40, 0x66, 0x8a, 0x31, 0x57, 0x24, 0x4d, 0x17,
/* round[ 4].s_box */ 0x2d, 0xfb, 0x02, 0x34, 0x3f, 0x6d, 0x12, 0xdd, 0x09, 0x33, 0x7e, 0xc7, 0x5b, 0x36, 0xe3, 0xf0,
/* round[ 4].s_row */ 0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
/* round[ 4].m_col */ 0x63, 0x85, 0xb7, 0x9f, 0xfc, 0x53, 0x8d, 0xf9, 0x97, 0xbe, 0x47, 0x8e, 0x75, 0x47, 0xd6, 0x91,
/* round[ 4].k_sch */ 0x47, 0xf7, 0xf7, 0xbc, 0x95, 0x35, 0x3e, 0x03, 0xf9, 0x6c, 0x32, 0xbc, 0xfd, 0x05, 0x8d, 0xfd,
/* round[ 5].start */ 0x24, 0x72, 0x40, 0x23, 0x69, 0x66, 0xb3, 0xfa, 0x6e, 0xd2, 0x75, 0x32, 0x88, 0x42, 0x5b, 0x6c,
/* round[ 5].s_box */ 0x36, 0x40, 0x09, 0x26, 0xf9, 0x33, 0x6d, 0x2d, 0x9f, 0xb5, 0x9d, 0x23, 0xc4, 0x2c, 0x39, 0x50,
/* round[ 5].s_row */ 0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
/* round[ 5].m_col */ 0xf4, 0xbc, 0xd4, 0x54, 0x32, 0xe5, 0x54, 0xd0, 0x75, 0xf1, 0xd6, 0xc5, 0x1d, 0xd0, 0x3b, 0x3c,
/* round[ 5].k_sch */ 0x3c, 0xaa, 0xa3, 0xe8, 0xa9, 0x9f, 0x9d, 0xeb, 0x50, 0xf3, 0xaf, 0x57, 0xad, 0xf6, 0x22, 0xaa,
/* round[ 6].start */ 0xc8, 0x16, 0x77, 0xbc, 0x9b, 0x7a, 0xc9, 0x3b, 0x25, 0x02, 0x79, 0x92, 0xb0, 0x26, 0x19, 0x96,
/* round[ 6].s_box */ 0xe8, 0x47, 0xf5, 0x65, 0x14, 0xda, 0xdd, 0xe2, 0x3f, 0x77, 0xb6, 0x4f, 0xe7, 0xf7, 0xd4, 0x90,
/* round[ 6].s_row */ 0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
/* round[ 6].m_col */ 0x98, 0x16, 0xee, 0x74, 0x00, 0xf8, 0x7f, 0x55, 0x6b, 0x2c, 0x04, 0x9c, 0x8e, 0x5a, 0xd0, 0x36,
/* round[ 6].k_sch */ 0x5e, 0x39, 0x0f, 0x7d, 0xf7, 0xa6, 0x92, 0x96, 0xa7, 0x55, 0x3d, 0xc1, 0x0a, 0xa3, 0x1f, 0x6b,
/* round[ 7].start */ 0xc6, 0x2f, 0xe1, 0x09, 0xf7, 0x5e, 0xed, 0xc3, 0xcc, 0x79, 0x39, 0x5d, 0x84, 0xf9, 0xcf, 0x5d,
/* round[ 7].s_box */ 0xb4, 0x15, 0xf8, 0x01, 0x68, 0x58, 0x55, 0x2e, 0x4b, 0xb6, 0x12, 0x4c, 0x5f, 0x99, 0x8a, 0x4c,
/* round[ 7].s_row */ 0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
/* round[ 7].m_col */ 0xc5, 0x7e, 0x1c, 0x15, 0x9a, 0x9b, 0xd2, 0x86, 0xf0, 0x5f, 0x4b, 0xe0, 0x98, 0xc6, 0x34, 0x39,
/* round[ 7].k_sch */ 0x14, 0xf9, 0x70, 0x1a, 0xe3, 0x5f, 0xe2, 0x8c, 0x44, 0x0a, 0xdf, 0x4d, 0x4e, 0xa9, 0xc0, 0x26,
/* round[ 8].start */ 0xd1, 0x87, 0x6c, 0x0f, 0x79, 0xc4, 0x30, 0x0a, 0xb4, 0x55, 0x94, 0xad, 0xd6, 0x6f, 0xf4, 0x1f,
/* round[ 8].s_box */ 0x3e, 0x17, 0x50, 0x76, 0xb6, 0x1c, 0x04, 0x67, 0x8d, 0xfc, 0x22, 0x95, 0xf6, 0xa8, 0xbf, 0xc0,
/* round[ 8].s_row */ 0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
/* round[ 8].m_col */ 0xba, 0xa0, 0x3d, 0xe7, 0xa1, 0xf9, 0xb5, 0x6e, 0xd5, 0x51, 0x2c, 0xba, 0x5f, 0x41, 0x4d, 0x23,
/* round[ 8].k_sch */ 0x47, 0x43, 0x87, 0x35, 0xa4, 0x1c, 0x65, 0xb9, 0xe0, 0x16, 0xba, 0xf4, 0xae, 0xbf, 0x7a, 0xd2,
/* round[ 9].start */ 0xfd, 0xe3, 0xba, 0xd2, 0x05, 0xe5, 0xd0, 0xd7, 0x35, 0x47, 0x96, 0x4e, 0xf1, 0xfe, 0x37, 0xf1,
/* round[ 9].s_box */ 0x54, 0x11, 0xf4, 0xb5, 0x6b, 0xd9, 0x70, 0x0e, 0x96, 0xa0, 0x90, 0x2f, 0xa1, 0xbb, 0x9a, 0xa1,
/* round[ 9].s_row */ 0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f,
/* round[ 9].m_col */ 0xe9, 0xf7, 0x4e, 0xec, 0x02, 0x30, 0x20, 0xf6, 0x1b, 0xf2, 0xcc, 0xf2, 0x35, 0x3c, 0x21, 0xc7,
/* round[ 9].k_sch */ 0x54, 0x99, 0x32, 0xd1, 0xf0, 0x85, 0x57, 0x68, 0x10, 0x93, 0xed, 0x9c, 0xbe, 0x2c, 0x97, 0x4e,
/* round[10].start */ 0xbd, 0x6e, 0x7c, 0x3d, 0xf2, 0xb5, 0x77, 0x9e, 0x0b, 0x61, 0x21, 0x6e, 0x8b, 0x10, 0xb6, 0x89,
/* round[10].s_box */ 0x7a, 0x9f, 0x10, 0x27, 0x89, 0xd5, 0xf5, 0x0b, 0x2b, 0xef, 0xfd, 0x9f, 0x3d, 0xca, 0x4e, 0xa7,
/* round[10].s_row */ 0x7a, 0xd5, 0xfd, 0xa7, 0x89, 0xef, 0x4e, 0x27, 0x2b, 0xca, 0x10, 0x0b, 0x3d, 0x9f, 0xf5, 0x9f,
/* round[10].k_sch */ 0x13, 0x11, 0x1d, 0x7f, 0xe3, 0x94, 0x4a, 0x17, 0xf3, 0x07, 0xa7, 0x8b, 0x4d, 0x2b, 0x30, 0xc5,
/* round[10].output */ 0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a
};

// Known test vectors taken from Federal Information Processing Standards Publication 197
static const unsigned char  aes_128_decrypt_test_key[AES_128_BLOCK_LEN] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
};

// Known test vectors taken from Federal Information Processing Standards Publication 197
static const unsigned char  aes_128_decrypt_test_ciphertext[AES_128_BLOCK_LEN] = {
	0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a
};

// Known test vectors taken from Federal Information Processing Standards Publication 197
static const unsigned char  aes_128_decrypt_test_plaintext[AES_128_BLOCK_LEN] = {
	0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff
};

// Known test vectors taken from Federal Information Processing Standards Publication 197
static const unsigned char  aes_128_decrypt_test_states[53*AES_128_BLOCK_LEN] = {
/* round[ 0].iinput */ 0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a,
/* round[ 0].ik_sch */ 0x13, 0x11, 0x1d, 0x7f, 0xe3, 0x94, 0x4a, 0x17, 0xf3, 0x07, 0xa7, 0x8b, 0x4d, 0x2b, 0x30, 0xc5,
/* round[ 1].istart */ 0x7a, 0xd5, 0xfd, 0xa7, 0x89, 0xef, 0x4e, 0x27, 0x2b, 0xca, 0x10, 0x0b, 0x3d, 0x9f, 0xf5, 0x9f,
/* round[ 1].is_row */ 0x7a, 0x9f, 0x10, 0x27, 0x89, 0xd5, 0xf5, 0x0b, 0x2b, 0xef, 0xfd, 0x9f, 0x3d, 0xca, 0x4e, 0xa7,
/* round[ 1].is_box */ 0xbd, 0x6e, 0x7c, 0x3d, 0xf2, 0xb5, 0x77, 0x9e, 0x0b, 0x61, 0x21, 0x6e, 0x8b, 0x10, 0xb6, 0x89,
/* round[ 1].ik_sch */ 0x54, 0x99, 0x32, 0xd1, 0xf0, 0x85, 0x57, 0x68, 0x10, 0x93, 0xed, 0x9c, 0xbe, 0x2c, 0x97, 0x4e,
/* round[ 1].ik_add */ 0xe9, 0xf7, 0x4e, 0xec, 0x02, 0x30, 0x20, 0xf6, 0x1b, 0xf2, 0xcc, 0xf2, 0x35, 0x3c, 0x21, 0xc7,
/* round[ 2].istart */ 0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f,
/* round[ 2].is_row */ 0x54, 0x11, 0xf4, 0xb5, 0x6b, 0xd9, 0x70, 0x0e, 0x96, 0xa0, 0x90, 0x2f, 0xa1, 0xbb, 0x9a, 0xa1,
/* round[ 2].is_box */ 0xfd, 0xe3, 0xba, 0xd2, 0x05, 0xe5, 0xd0, 0xd7, 0x35, 0x47, 0x96, 0x4e, 0xf1, 0xfe, 0x37, 0xf1,
/* round[ 2].ik_sch */ 0x47, 0x43, 0x87, 0x35, 0xa4, 0x1c, 0x65, 0xb9, 0xe0, 0x16, 0xba, 0xf4, 0xae, 0xbf, 0x7a, 0xd2,
/* round[ 2].ik_add */ 0xba, 0xa0, 0x3d, 0xe7, 0xa1, 0xf9, 0xb5, 0x6e, 0xd5, 0x51, 0x2c, 0xba, 0x5f, 0x41, 0x4d, 0x23,
/* round[ 3].istart */ 0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
/* round[ 3].is_row */ 0x3e, 0x17, 0x50, 0x76, 0xb6, 0x1c, 0x04, 0x67, 0x8d, 0xfc, 0x22, 0x95, 0xf6, 0xa8, 0xbf, 0xc0,
/* round[ 3].is_box */ 0xd1, 0x87, 0x6c, 0x0f, 0x79, 0xc4, 0x30, 0x0a, 0xb4, 0x55, 0x94, 0xad, 0xd6, 0x6f, 0xf4, 0x1f,
/* round[ 3].ik_sch */ 0x14, 0xf9, 0x70, 0x1a, 0xe3, 0x5f, 0xe2, 0x8c, 0x44, 0x0a, 0xdf, 0x4d, 0x4e, 0xa9, 0xc0, 0x26,
/* round[ 3].ik_add */ 0xc5, 0x7e, 0x1c, 0x15, 0x9a, 0x9b, 0xd2, 0x86, 0xf0, 0x5f, 0x4b, 0xe0, 0x98, 0xc6, 0x34, 0x39,
/* round[ 4].istart */ 0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
/* round[ 4].is_row */ 0xb4, 0x15, 0xf8, 0x01, 0x68, 0x58, 0x55, 0x2e, 0x4b, 0xb6, 0x12, 0x4c, 0x5f, 0x99, 0x8a, 0x4c,
/* round[ 4].is_box */ 0xc6, 0x2f, 0xe1, 0x09, 0xf7, 0x5e, 0xed, 0xc3, 0xcc, 0x79, 0x39, 0x5d, 0x84, 0xf9, 0xcf, 0x5d,
/* round[ 4].ik_sch */ 0x5e, 0x39, 0x0f, 0x7d, 0xf7, 0xa6, 0x92, 0x96, 0xa7, 0x55, 0x3d, 0xc1, 0x0a, 0xa3, 0x1f, 0x6b,
/* round[ 4].ik_add */ 0x98, 0x16, 0xee, 0x74, 0x00, 0xf8, 0x7f, 0x55, 0x6b, 0x2c, 0x04, 0x9c, 0x8e, 0x5a, 0xd0, 0x36,
/* round[ 5].istart */ 0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
/* round[ 5].is_row */ 0xe8, 0x47, 0xf5, 0x65, 0x14, 0xda, 0xdd, 0xe2, 0x3f, 0x77, 0xb6, 0x4f, 0xe7, 0xf7, 0xd4, 0x90,
/* round[ 5].is_box */ 0xc8, 0x16, 0x77, 0xbc, 0x9b, 0x7a, 0xc9, 0x3b, 0x25, 0x02, 0x79, 0x92, 0xb0, 0x26, 0x19, 0x96,
/* round[ 5].ik_sch */ 0x3c, 0xaa, 0xa3, 0xe8, 0xa9, 0x9f, 0x9d, 0xeb, 0x50, 0xf3, 0xaf, 0x57, 0xad, 0xf6, 0x22, 0xaa,
/* round[ 5].ik_add */ 0xf4, 0xbc, 0xd4, 0x54, 0x32, 0xe5, 0x54, 0xd0, 0x75, 0xf1, 0xd6, 0xc5, 0x1d, 0xd0, 0x3b, 0x3c,
/* round[ 6].istart */ 0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
/* round[ 6].is_row */ 0x36, 0x40, 0x09, 0x26, 0xf9, 0x33, 0x6d, 0x2d, 0x9f, 0xb5, 0x9d, 0x23, 0xc4, 0x2c, 0x39, 0x50,
/* round[ 6].is_box */ 0x24, 0x72, 0x40, 0x23, 0x69, 0x66, 0xb3, 0xfa, 0x6e, 0xd2, 0x75, 0x32, 0x88, 0x42, 0x5b, 0x6c,
/* round[ 6].ik_sch */ 0x47, 0xf7, 0xf7, 0xbc, 0x95, 0x35, 0x3e, 0x03, 0xf9, 0x6c, 0x32, 0xbc, 0xfd, 0x05, 0x8d, 0xfd,
/* round[ 6].ik_add */ 0x63, 0x85, 0xb7, 0x9f, 0xfc, 0x53, 0x8d, 0xf9, 0x97, 0xbe, 0x47, 0x8e, 0x75, 0x47, 0xd6, 0x91,
/* round[ 7].istart */ 0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
/* round[ 7].is_row */ 0x2d, 0xfb, 0x02, 0x34, 0x3f, 0x6d, 0x12, 0xdd, 0x09, 0x33, 0x7e, 0xc7, 0x5b, 0x36, 0xe3, 0xf0,
/* round[ 7].is_box */ 0xfa, 0x63, 0x6a, 0x28, 0x25, 0xb3, 0x39, 0xc9, 0x40, 0x66, 0x8a, 0x31, 0x57, 0x24, 0x4d, 0x17,
/* round[ 7].ik_sch */ 0xb6, 0xff, 0x74, 0x4e, 0xd2, 0xc2, 0xc9, 0xbf, 0x6c, 0x59, 0x0c, 0xbf, 0x04, 0x69, 0xbf, 0x41,
/* round[ 7].ik_add */ 0x4c, 0x9c, 0x1e, 0x66, 0xf7, 0x71, 0xf0, 0x76, 0x2c, 0x3f, 0x86, 0x8e, 0x53, 0x4d, 0xf2, 0x56,
/* round[ 8].istart */ 0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
/* round[ 8].is_row */ 0x3b, 0x59, 0xcb, 0x73, 0xfc, 0xd9, 0x0e, 0xe0, 0x57, 0x74, 0x22, 0x2d, 0xc0, 0x67, 0xfb, 0x68,
/* round[ 8].is_box */ 0x49, 0x15, 0x59, 0x8f, 0x55, 0xe5, 0xd7, 0xa0, 0xda, 0xca, 0x94, 0xfa, 0x1f, 0x0a, 0x63, 0xf7,
/* round[ 8].ik_sch */ 0xb6, 0x92, 0xcf, 0x0b, 0x64, 0x3d, 0xbd, 0xf1, 0xbe, 0x9b, 0xc5, 0x00, 0x68, 0x30, 0xb3, 0xfe,
/* round[ 8].ik_add */ 0xff, 0x87, 0x96, 0x84, 0x31, 0xd8, 0x6a, 0x51, 0x64, 0x51, 0x51, 0xfa, 0x77, 0x3a, 0xd0, 0x09,
/* round[ 9].istart */ 0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
/* round[ 9].is_row */ 0xa7, 0x61, 0xca, 0x9b, 0x97, 0xbe, 0x8b, 0x45, 0xd8, 0xad, 0x1a, 0x61, 0x1f, 0xc9, 0x73, 0x69,
/* round[ 9].is_box */ 0x89, 0xd8, 0x10, 0xe8, 0x85, 0x5a, 0xce, 0x68, 0x2d, 0x18, 0x43, 0xd8, 0xcb, 0x12, 0x8f, 0xe4,
/* round[ 9].ik_sch */ 0xd6, 0xaa, 0x74, 0xfd, 0xd2, 0xaf, 0x72, 0xfa, 0xda, 0xa6, 0x78, 0xf1, 0xd6, 0xab, 0x76, 0xfe,
/* round[ 9].ik_add */ 0x5f, 0x72, 0x64, 0x15, 0x57, 0xf5, 0xbc, 0x92, 0xf7, 0xbe, 0x3b, 0x29, 0x1d, 0xb9, 0xf9, 0x1a,
/* round[10].istart */ 0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
/* round[10].is_row */ 0x63, 0xca, 0xb7, 0x04, 0x09, 0x53, 0xd0, 0x51, 0xcd, 0x60, 0xe0, 0xe7, 0xba, 0x70, 0xe1, 0x8c,
/* round[10].is_box */ 0x00, 0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0xa0, 0xb0, 0xc0, 0xd0, 0xe0, 0xf0,
/* round[10].ik_sch */ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
/* round[10].ioutput */ 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff
};

// Known test vectors taken from Federal Information Processing Standards Publication 197
static const unsigned char  aes_128_decrypt_equivalent_test_states[53*AES_128_BLOCK_LEN] = {
/* round[ 0].iinput */ 	 0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a,
/* round[ 0].ik_sch */ 	 0x13, 0x11, 0x1d, 0x7f, 0xe3, 0x94, 0x4a, 0x17, 0xf3, 0x07, 0xa7, 0x8b, 0x4d, 0x2b, 0x30, 0xc5,
/* round[ 1].istart */ 	 0x7a, 0xd5, 0xfd, 0xa7, 0x89, 0xef, 0x4e, 0x27, 0x2b, 0xca, 0x10, 0x0b, 0x3d, 0x9f, 0xf5, 0x9f,
/* round[ 1].is_box */ 	 0xbd, 0xb5, 0x21, 0x89, 0xf2, 0x61, 0xb6, 0x3d, 0x0b, 0x10, 0x7c, 0x9e, 0x8b, 0x6e, 0x77, 0x6e,
/* round[ 1].is_row */ 	 0xbd, 0x6e, 0x7c, 0x3d, 0xf2, 0xb5, 0x77, 0x9e, 0x0b, 0x61, 0x21, 0x6e, 0x8b, 0x10, 0xb6, 0x89,
/* round[ 1].im_col */ 	 0x47, 0x73, 0xb9, 0x1f, 0xf7, 0x2f, 0x35, 0x43, 0x61, 0xcb, 0x01, 0x8e, 0xa1, 0xe6, 0xcf, 0x2c,
/* round[ 1].ik_sch */ 	 0x13, 0xaa, 0x29, 0xbe, 0x9c, 0x8f, 0xaf, 0xf6, 0xf7, 0x70, 0xf5, 0x80, 0x00, 0xf7, 0xbf, 0x03,
/* round[ 2].istart */ 	 0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f,
/* round[ 2].is_box */ 	 0xfd, 0xe5, 0x96, 0xf1, 0x05, 0x47, 0x37, 0xd2, 0x35, 0xfe, 0xba, 0xd7, 0xf1, 0xe3, 0xd0, 0x4e,
/* round[ 2].is_row */ 	 0xfd, 0xe3, 0xba, 0xd2, 0x05, 0xe5, 0xd0, 0xd7, 0x35, 0x47, 0x96, 0x4e, 0xf1, 0xfe, 0x37, 0xf1,
/* round[ 2].im_col */ 	 0x2d, 0x7e, 0x86, 0xa3, 0x39, 0xd9, 0x39, 0x3e, 0xe6, 0x57, 0x0a, 0x11, 0x01, 0x90, 0x4e, 0x16,
/* round[ 2].ik_sch */ 	 0x13, 0x62, 0xa4, 0x63, 0x8f, 0x25, 0x86, 0x48, 0x6b, 0xff, 0x5a, 0x76, 0xf7, 0x87, 0x4a, 0x83,
/* round[ 3].istart */ 	 0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
/* round[ 3].is_box */ 	 0xd1, 0xc4, 0x94, 0x1f, 0x79, 0x55, 0xf4, 0x0f, 0xb4, 0x6f, 0x6c, 0x0a, 0xd6, 0x87, 0x30, 0xad,
/* round[ 3].is_row */ 	 0xd1, 0x87, 0x6c, 0x0f, 0x79, 0xc4, 0x30, 0x0a, 0xb4, 0x55, 0x94, 0xad, 0xd6, 0x6f, 0xf4, 0x1f,
/* round[ 3].im_col */ 	 0x39, 0xda, 0xee, 0x38, 0xf4, 0xf1, 0xa8, 0x2a, 0xaf, 0x43, 0x24, 0x10, 0xc3, 0x6d, 0x45, 0xb9,
/* round[ 3].ik_sch */ 	 0x8d, 0x82, 0xfc, 0x74, 0x9c, 0x47, 0x22, 0x2b, 0xe4, 0xda, 0xdc, 0x3e, 0x9c, 0x78, 0x10, 0xf5,
/* round[ 4].istart */ 	 0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
/* round[ 4].is_box */ 	 0xc6, 0x5e, 0x39, 0x5d, 0xf7, 0x79, 0xcf, 0x09, 0xcc, 0xf9, 0xe1, 0xc3, 0x84, 0x2f, 0xed, 0x5d,
/* round[ 4].is_row */ 	 0xc6, 0x2f, 0xe1, 0x09, 0xf7, 0x5e, 0xed, 0xc3, 0xcc, 0x79, 0x39, 0x5d, 0x84, 0xf9, 0xcf, 0x5d,
/* round[ 4].im_col */ 	 0x9a, 0x39, 0xbf, 0x1d, 0x05, 0xb2, 0x0a, 0x3a, 0x47, 0x6a, 0x0b, 0xf7, 0x9f, 0xe5, 0x11, 0x84,
/* round[ 4].ik_sch */ 	 0x72, 0xe3, 0x09, 0x8d, 0x11, 0xc5, 0xde, 0x5f, 0x78, 0x9d, 0xfe, 0x15, 0x78, 0xa2, 0xcc, 0xcb,
/* round[ 5].istart */ 	 0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
/* round[ 5].is_box */ 	 0xc8, 0x7a, 0x79, 0x96, 0x9b, 0x02, 0x19, 0xbc, 0x25, 0x26, 0x77, 0x3b, 0xb0, 0x16, 0xc9, 0x92,
/* round[ 5].is_row */ 	 0xc8, 0x16, 0x77, 0xbc, 0x9b, 0x7a, 0xc9, 0x3b, 0x25, 0x02, 0x79, 0x92, 0xb0, 0x26, 0x19, 0x96,
/* round[ 5].im_col */ 	 0x18, 0xf7, 0x8d, 0x77, 0x9a, 0x93, 0xee, 0xf4, 0xf6, 0x74, 0x29, 0x67, 0xc4, 0x7f, 0x5f, 0xfd,
/* round[ 5].ik_sch */ 	 0x2e, 0xc4, 0x10, 0x27, 0x63, 0x26, 0xd7, 0xd2, 0x69, 0x58, 0x20, 0x4a, 0x00, 0x3f, 0x32, 0xde,
/* round[ 6].istart */ 	 0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
/* round[ 6].is_box */ 	 0x24, 0x66, 0x75, 0x6c, 0x69, 0xd2, 0x5b, 0x23, 0x6e, 0x42, 0x40, 0xfa, 0x88, 0x72, 0xb3, 0x32,
/* round[ 6].is_row */ 	 0x24, 0x72, 0x40, 0x23, 0x69, 0x66, 0xb3, 0xfa, 0x6e, 0xd2, 0x75, 0x32, 0x88, 0x42, 0x5b, 0x6c,
/* round[ 6].im_col */ 	 0x85, 0xcf, 0x8b, 0xf4, 0x72, 0xd1, 0x24, 0xc1, 0x03, 0x48, 0xf5, 0x45, 0x32, 0x9c, 0x00, 0x53,
/* round[ 6].ik_sch */ 	 0xa8, 0xa2, 0xf5, 0x04, 0x4d, 0xe2, 0xc7, 0xf5, 0x0a, 0x7e, 0xf7, 0x98, 0x69, 0x67, 0x12, 0x94,
/* round[ 7].istart */ 	 0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
/* round[ 7].is_box */ 	 0xfa, 0xb3, 0x8a, 0x17, 0x25, 0x66, 0x4d, 0x28, 0x40, 0x24, 0x6a, 0xc9, 0x57, 0x63, 0x39, 0x31,
/* round[ 7].is_row */ 	 0xfa, 0x63, 0x6a, 0x28, 0x25, 0xb3, 0x39, 0xc9, 0x40, 0x66, 0x8a, 0x31, 0x57, 0x24, 0x4d, 0x17,
/* round[ 7].im_col */ 	 0xfc, 0x1f, 0xc1, 0xf9, 0x19, 0x34, 0xc9, 0x82, 0x10, 0xfb, 0xfb, 0x8d, 0xa3, 0x40, 0xeb, 0x21,
/* round[ 7].ik_sch */ 	 0xc7, 0xc6, 0xe3, 0x91, 0xe5, 0x40, 0x32, 0xf1, 0x47, 0x9c, 0x30, 0x6d, 0x63, 0x19, 0xe5, 0x0c,
/* round[ 8].istart */ 	 0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
/* round[ 8].is_box */ 	 0x49, 0xe5, 0x94, 0xf7, 0x55, 0xca, 0x63, 0x8f, 0xda, 0x0a, 0x59, 0xa0, 0x1f, 0x15, 0xd7, 0xfa,
/* round[ 8].is_row */ 	 0x49, 0x15, 0x59, 0x8f, 0x55, 0xe5, 0xd7, 0xa0, 0xda, 0xca, 0x94, 0xfa, 0x1f, 0x0a, 0x63, 0xf7,
/* round[ 8].im_col */ 	 0x07, 0x65, 0x18, 0xf0, 0xb5, 0x2b, 0xa2, 0xfb, 0x7a, 0x15, 0xc8, 0xd9, 0x3b, 0xe4, 0x5e, 0x00,
/* round[ 8].ik_sch */ 	 0xa0, 0xdb, 0x02, 0x99, 0x22, 0x86, 0xd1, 0x60, 0xa2, 0xdc, 0x02, 0x9c, 0x24, 0x85, 0xd5, 0x61,
/* round[ 9].istart */ 	 0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
/* round[ 9].is_box */ 	 0x89, 0x5a, 0x43, 0xe4, 0x85, 0x18, 0x8f, 0xe8, 0x2d, 0x12, 0x10, 0x68, 0xcb, 0xd8, 0xce, 0xd8,
/* round[ 9].is_row */ 	 0x89, 0xd8, 0x10, 0xe8, 0x85, 0x5a, 0xce, 0x68, 0x2d, 0x18, 0x43, 0xd8, 0xcb, 0x12, 0x8f, 0xe4,
/* round[ 9].im_col */ 	 0xef, 0x05, 0x3f, 0x7c, 0x8b, 0x3d, 0x32, 0xfd, 0x4d, 0x2a, 0x64, 0xad, 0x3c, 0x93, 0x07, 0x1a,
/* round[ 9].ik_sch */ 	 0x8c, 0x56, 0xdf, 0xf0, 0x82, 0x5d, 0xd3, 0xf9, 0x80, 0x5a, 0xd3, 0xfc, 0x86, 0x59, 0xd7, 0xfd,
/* round[10].istart */ 	 0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
/* round[10].is_box */ 	 0x00, 0x50, 0xa0, 0xf0, 0x40, 0x90, 0xe0, 0x30, 0x80, 0xd0, 0x20, 0x70, 0xc0, 0x10, 0x60, 0xb0,
/* round[10].is_row */ 	 0x00, 0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0xa0, 0xb0, 0xc0, 0xd0, 0xe0, 0xf0,
/* round[10].ik_sch */ 	 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
/* round[10].ioutput */  0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff
};

unsigned char aes_128_key_schedule_test[11*16] = {
	0x13, 0x11, 0x1d, 0x7f, 0xe3, 0x94, 0x4a, 0x17, 0xf3, 0x07, 0xa7, 0x8b, 0x4d, 0x2b, 0x30, 0xc5,
	0x54, 0x99, 0x32, 0xd1, 0xf0, 0x85, 0x57, 0x68, 0x10, 0x93, 0xed, 0x9c, 0xbe, 0x2c, 0x97, 0x4e,
	0x47, 0x43, 0x87, 0x35, 0xa4, 0x1c, 0x65, 0xb9, 0xe0, 0x16, 0xba, 0xf4, 0xae, 0xbf, 0x7a, 0xd2,
	0x14, 0xf9, 0x70, 0x1a, 0xe3, 0x5f, 0xe2, 0x8c, 0x44, 0x0a, 0xdf, 0x4d, 0x4e, 0xa9, 0xc0, 0x26,
	0x5e, 0x39, 0x0f, 0x7d, 0xf7, 0xa6, 0x92, 0x96, 0xa7, 0x55, 0x3d, 0xc1, 0x0a, 0xa3, 0x1f, 0x6b,
	0x3c, 0xaa, 0xa3, 0xe8, 0xa9, 0x9f, 0x9d, 0xeb, 0x50, 0xf3, 0xaf, 0x57, 0xad, 0xf6, 0x22, 0xaa,
	0x47, 0xf7, 0xf7, 0xbc, 0x95, 0x35, 0x3e, 0x03, 0xf9, 0x6c, 0x32, 0xbc, 0xfd, 0x05, 0x8d, 0xfd,
	0xb6, 0xff, 0x74, 0x4e, 0xd2, 0xc2, 0xc9, 0xbf, 0x6c, 0x59, 0x0c, 0xbf, 0x04, 0x69, 0xbf, 0x41,
	0xb6, 0x92, 0xcf, 0x0b, 0x64, 0x3d, 0xbd, 0xf1, 0xbe, 0x9b, 0xc5, 0x00, 0x68, 0x30, 0xb3, 0xfe,
	0xd6, 0xaa, 0x74, 0xfd, 0xd2, 0xaf, 0x72, 0xfa, 0xda, 0xa6, 0x78, 0xf1, 0xd6, 0xab, 0x76, 0xfe,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f  // input key
};

unsigned char aes_128_key_schedule_test_key[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
}; 









/*
 *  ADD ROUND KEY
 */

static const unsigned char  aes_128_add_round_key_test_inputs[11*16] = 
{
	0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x04, 0x30, 0xd8, 0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a,
	0x47, 0x73, 0xb9, 0x1f, 0xf7, 0x2f, 0x35, 0x43, 0x61, 0xcb, 0x01, 0x8e, 0xa1, 0xe6, 0xcf, 0x2c,
	0x2d, 0x7e, 0x86, 0xa3, 0x39, 0xd9, 0x39, 0x3e, 0xe6, 0x57, 0x0a, 0x11, 0x01, 0x90, 0x4e, 0x16,
	0x39, 0xda, 0xee, 0x38, 0xf4, 0xf1, 0xa8, 0x2a, 0xaf, 0x43, 0x24, 0x10, 0xc3, 0x6d, 0x45, 0xb9,
	0x9a, 0x39, 0xbf, 0x1d, 0x05, 0xb2, 0x0a, 0x3a, 0x47, 0x6a, 0x0b, 0xf7, 0x9f, 0xe5, 0x11, 0x84,
	0x18, 0xf7, 0x8d, 0x77, 0x9a, 0x93, 0xee, 0xf4, 0xf6, 0x74, 0x29, 0x67, 0xc4, 0x7f, 0x5f, 0xfd,
	0x85, 0xcf, 0x8b, 0xf4, 0x72, 0xd1, 0x24, 0xc1, 0x03, 0x48, 0xf5, 0x45, 0x32, 0x9c, 0x00, 0x53,
	0xfc, 0x1f, 0xc1, 0xf9, 0x19, 0x34, 0xc9, 0x82, 0x10, 0xfb, 0xfb, 0x8d, 0xa3, 0x40, 0xeb, 0x21,
	0x07, 0x65, 0x18, 0xf0, 0xb5, 0x2b, 0xa2, 0xfb, 0x7a, 0x15, 0xc8, 0xd9, 0x3b, 0xe4, 0x5e, 0x00,
	0xef, 0x05, 0x3f, 0x7c, 0x8b, 0x3d, 0x32, 0xfd, 0x4d, 0x2a, 0x64, 0xad, 0x3c, 0x93, 0x07, 0x1a,
	0x00, 0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0xa0, 0xb0, 0xc0, 0xd0, 0xe0, 0xf0
};


static const unsigned char  aes_128_add_round_key_test_round_keys[11*16] = 
{
	0x13, 0x11, 0x1d, 0x7f, 0xe3, 0x94, 0x4a, 0x17, 0xf3, 0x07, 0xa7, 0x8b, 0x4d, 0x2b, 0x30, 0xc5,
	0x13, 0xaa, 0x29, 0xbe, 0x9c, 0x8f, 0xaf, 0xf6, 0xf7, 0x70, 0xf5, 0x80, 0x00, 0xf7, 0xbf, 0x03,
	0x13, 0x62, 0xa4, 0x63, 0x8f, 0x25, 0x86, 0x48, 0x6b, 0xff, 0x5a, 0x76, 0xf7, 0x87, 0x4a, 0x83,
	0x8d, 0x82, 0xfc, 0x74, 0x9c, 0x47, 0x22, 0x2b, 0xe4, 0xda, 0xdc, 0x3e, 0x9c, 0x78, 0x10, 0xf5,
	0x72, 0xe3, 0x09, 0x8d, 0x11, 0xc5, 0xde, 0x5f, 0x78, 0x9d, 0xfe, 0x15, 0x78, 0xa2, 0xcc, 0xcb,
	0x2e, 0xc4, 0x10, 0x27, 0x63, 0x26, 0xd7, 0xd2, 0x69, 0x58, 0x20, 0x4a, 0x00, 0x3f, 0x32, 0xde,
	0xa8, 0xa2, 0xf5, 0x04, 0x4d, 0xe2, 0xc7, 0xf5, 0x0a, 0x7e, 0xf7, 0x98, 0x69, 0x67, 0x12, 0x94,
	0xc7, 0xc6, 0xe3, 0x91, 0xe5, 0x40, 0x32, 0xf1, 0x47, 0x9c, 0x30, 0x6d, 0x63, 0x19, 0xe5, 0x0c,
	0xa0, 0xdb, 0x02, 0x99, 0x22, 0x86, 0xd1, 0x60, 0xa2, 0xdc, 0x02, 0x9c, 0x24, 0x85, 0xd5, 0x61,
	0x8c, 0x56, 0xdf, 0xf0, 0x82, 0x5d, 0xd3, 0xf9, 0x80, 0x5a, 0xd3, 0xfc, 0x86, 0x59, 0xd7, 0xfd,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
};


static const unsigned char  aes_128_add_round_key_test_outputs[11*16] = 
{
	0x7a, 0xd5, 0xfd, 0xa7, 0x89, 0xef, 0x4e, 0x27, 0x2b, 0xca, 0x10, 0x0b, 0x3d, 0x9f, 0xf5, 0x9f,
	0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f,
	0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
	0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
	0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
	0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
	0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
	0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
	0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
	0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
	0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff
};


/*
 * MIX COLUMNS
 */

static const unsigned char  aes_128_mix_columns_test_inputs[10*16] = 
{
0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f
};

static const unsigned char  aes_128_mix_columns_test_outputs[10*16] = 
{
0x5f, 0x72, 0x64, 0x15, 0x57, 0xf5, 0xbc, 0x92, 0xf7, 0xbe, 0x3b, 0x29, 0x1d, 0xb9, 0xf9, 0x1a,
0xff, 0x87, 0x96, 0x84, 0x31, 0xd8, 0x6a, 0x51, 0x64, 0x51, 0x51, 0xfa, 0x77, 0x3a, 0xd0, 0x09,
0x4c, 0x9c, 0x1e, 0x66, 0xf7, 0x71, 0xf0, 0x76, 0x2c, 0x3f, 0x86, 0x8e, 0x53, 0x4d, 0xf2, 0x56,
0x63, 0x85, 0xb7, 0x9f, 0xfc, 0x53, 0x8d, 0xf9, 0x97, 0xbe, 0x47, 0x8e, 0x75, 0x47, 0xd6, 0x91,
0xf4, 0xbc, 0xd4, 0x54, 0x32, 0xe5, 0x54, 0xd0, 0x75, 0xf1, 0xd6, 0xc5, 0x1d, 0xd0, 0x3b, 0x3c,
0x98, 0x16, 0xee, 0x74, 0x00, 0xf8, 0x7f, 0x55, 0x6b, 0x2c, 0x04, 0x9c, 0x8e, 0x5a, 0xd0, 0x36,
0xc5, 0x7e, 0x1c, 0x15, 0x9a, 0x9b, 0xd2, 0x86, 0xf0, 0x5f, 0x4b, 0xe0, 0x98, 0xc6, 0x34, 0x39,
0xba, 0xa0, 0x3d, 0xe7, 0xa1, 0xf9, 0xb5, 0x6e, 0xd5, 0x51, 0x2c, 0xba, 0x5f, 0x41, 0x4d, 0x23,
0xe9, 0xf7, 0x4e, 0xec, 0x02, 0x30, 0x20, 0xf6, 0x1b, 0xf2, 0xcc, 0xf2, 0x35, 0x3c, 0x21, 0xc7
};


static const unsigned char  aes_128_inv_mix_columns_test_inputs[10*16] = 
{
0xbd, 0x6e, 0x7c, 0x3d, 0xf2, 0xb5, 0x77, 0x9e, 0x0b, 0x61, 0x21, 0x6e, 0x8b, 0x10, 0xb6, 0x89,
0xfd, 0xe3, 0xba, 0xd2, 0x05, 0xe5, 0xd0, 0xd7, 0x35, 0x47, 0x96, 0x4e, 0xf1, 0xfe, 0x37, 0xf1,
0xd1, 0x87, 0x6c, 0x0f, 0x79, 0xc4, 0x30, 0x0a, 0xb4, 0x55, 0x94, 0xad, 0xd6, 0x6f, 0xf4, 0x1f,
0xc6, 0x2f, 0xe1, 0x09, 0xf7, 0x5e, 0xed, 0xc3, 0xcc, 0x79, 0x39, 0x5d, 0x84, 0xf9, 0xcf, 0x5d,
0xc8, 0x16, 0x77, 0xbc, 0x9b, 0x7a, 0xc9, 0x3b, 0x25, 0x02, 0x79, 0x92, 0xb0, 0x26, 0x19, 0x96,
0x24, 0x72, 0x40, 0x23, 0x69, 0x66, 0xb3, 0xfa, 0x6e, 0xd2, 0x75, 0x32, 0x88, 0x42, 0x5b, 0x6c,
0xfa, 0x63, 0x6a, 0x28, 0x25, 0xb3, 0x39, 0xc9, 0x40, 0x66, 0x8a, 0x31, 0x57, 0x24, 0x4d, 0x17,
0x49, 0x15, 0x59, 0x8f, 0x55, 0xe5, 0xd7, 0xa0, 0xda, 0xca, 0x94, 0xfa, 0x1f, 0x0a, 0x63, 0xf7,
0x89, 0xd8, 0x10, 0xe8, 0x85, 0x5a, 0xce, 0x68, 0x2d, 0x18, 0x43, 0xd8, 0xcb, 0x12, 0x8f, 0xe4
};

static const unsigned char  aes_128_inv_mix_columns_test_outputs[10*16] = 
{
0x47, 0x73, 0xb9, 0x1f, 0xf7, 0x2f, 0x35, 0x43, 0x61, 0xcb, 0x01, 0x8e, 0xa1, 0xe6, 0xcf, 0x2c,
0x2d, 0x7e, 0x86, 0xa3, 0x39, 0xd9, 0x39, 0x3e, 0xe6, 0x57, 0x0a, 0x11, 0x01, 0x90, 0x4e, 0x16,
0x39, 0xda, 0xee, 0x38, 0xf4, 0xf1, 0xa8, 0x2a, 0xaf, 0x43, 0x24, 0x10, 0xc3, 0x6d, 0x45, 0xb9,
0x9a, 0x39, 0xbf, 0x1d, 0x05, 0xb2, 0x0a, 0x3a, 0x47, 0x6a, 0x0b, 0xf7, 0x9f, 0xe5, 0x11, 0x84,
0x18, 0xf7, 0x8d, 0x77, 0x9a, 0x93, 0xee, 0xf4, 0xf6, 0x74, 0x29, 0x67, 0xc4, 0x7f, 0x5f, 0xfd,
0x85, 0xcf, 0x8b, 0xf4, 0x72, 0xd1, 0x24, 0xc1, 0x03, 0x48, 0xf5, 0x45, 0x32, 0x9c, 0x00, 0x53,
0xfc, 0x1f, 0xc1, 0xf9, 0x19, 0x34, 0xc9, 0x82, 0x10, 0xfb, 0xfb, 0x8d, 0xa3, 0x40, 0xeb, 0x21,
0x07, 0x65, 0x18, 0xf0, 0xb5, 0x2b, 0xa2, 0xfb, 0x7a, 0x15, 0xc8, 0xd9, 0x3b, 0xe4, 0x5e, 0x00,
0xef, 0x05, 0x3f, 0x7c, 0x8b, 0x3d, 0x32, 0xfd, 0x4d, 0x2a, 0x64, 0xad, 0x3c, 0x93, 0x07, 0x1a
};



/*
 * SUB BYTES
 */

static const unsigned char  aes_128_sub_bytes_test_inputs[10*16] = 
{
	0x00, 0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0xa0, 0xb0, 0xc0, 0xd0, 0xe0, 0xf0,
	0x89, 0xd8, 0x10, 0xe8, 0x85, 0x5a, 0xce, 0x68, 0x2d, 0x18, 0x43, 0xd8, 0xcb, 0x12, 0x8f, 0xe4,
	0x49, 0x15, 0x59, 0x8f, 0x55, 0xe5, 0xd7, 0xa0, 0xda, 0xca, 0x94, 0xfa, 0x1f, 0x0a, 0x63, 0xf7,
	0xfa, 0x63, 0x6a, 0x28, 0x25, 0xb3, 0x39, 0xc9, 0x40, 0x66, 0x8a, 0x31, 0x57, 0x24, 0x4d, 0x17,
	0x24, 0x72, 0x40, 0x23, 0x69, 0x66, 0xb3, 0xfa, 0x6e, 0xd2, 0x75, 0x32, 0x88, 0x42, 0x5b, 0x6c,
	0xc8, 0x16, 0x77, 0xbc, 0x9b, 0x7a, 0xc9, 0x3b, 0x25, 0x02, 0x79, 0x92, 0xb0, 0x26, 0x19, 0x96,
	0xc6, 0x2f, 0xe1, 0x09, 0xf7, 0x5e, 0xed, 0xc3, 0xcc, 0x79, 0x39, 0x5d, 0x84, 0xf9, 0xcf, 0x5d,
	0xd1, 0x87, 0x6c, 0x0f, 0x79, 0xc4, 0x30, 0x0a, 0xb4, 0x55, 0x94, 0xad, 0xd6, 0x6f, 0xf4, 0x1f,
	0xfd, 0xe3, 0xba, 0xd2, 0x05, 0xe5, 0xd0, 0xd7, 0x35, 0x47, 0x96, 0x4e, 0xf1, 0xfe, 0x37, 0xf1,
	0xbd, 0x6e, 0x7c, 0x3d, 0xf2, 0xb5, 0x77, 0x9e, 0x0b, 0x61, 0x21, 0x6e, 0x8b, 0x10, 0xb6, 0x89
};

static const unsigned char  aes_128_sub_bytes_test_outputs[10*16] = 
{
	0x63, 0xca, 0xb7, 0x04, 0x09, 0x53, 0xd0, 0x51, 0xcd, 0x60, 0xe0, 0xe7, 0xba, 0x70, 0xe1, 0x8c,
	0xa7, 0x61, 0xca, 0x9b, 0x97, 0xbe, 0x8b, 0x45, 0xd8, 0xad, 0x1a, 0x61, 0x1f, 0xc9, 0x73, 0x69,
	0x3b, 0x59, 0xcb, 0x73, 0xfc, 0xd9, 0x0e, 0xe0, 0x57, 0x74, 0x22, 0x2d, 0xc0, 0x67, 0xfb, 0x68,
	0x2d, 0xfb, 0x02, 0x34, 0x3f, 0x6d, 0x12, 0xdd, 0x09, 0x33, 0x7e, 0xc7, 0x5b, 0x36, 0xe3, 0xf0,
	0x36, 0x40, 0x09, 0x26, 0xf9, 0x33, 0x6d, 0x2d, 0x9f, 0xb5, 0x9d, 0x23, 0xc4, 0x2c, 0x39, 0x50,
	0xe8, 0x47, 0xf5, 0x65, 0x14, 0xda, 0xdd, 0xe2, 0x3f, 0x77, 0xb6, 0x4f, 0xe7, 0xf7, 0xd4, 0x90,
	0xb4, 0x15, 0xf8, 0x01, 0x68, 0x58, 0x55, 0x2e, 0x4b, 0xb6, 0x12, 0x4c, 0x5f, 0x99, 0x8a, 0x4c,
	0x3e, 0x17, 0x50, 0x76, 0xb6, 0x1c, 0x04, 0x67, 0x8d, 0xfc, 0x22, 0x95, 0xf6, 0xa8, 0xbf, 0xc0,
	0x54, 0x11, 0xf4, 0xb5, 0x6b, 0xd9, 0x70, 0x0e, 0x96, 0xa0, 0x90, 0x2f, 0xa1, 0xbb, 0x9a, 0xa1,
	0x7a, 0x9f, 0x10, 0x27, 0x89, 0xd5, 0xf5, 0x0b, 0x2b, 0xef, 0xfd, 0x9f, 0x3d, 0xca, 0x4e, 0xa7
};

static const unsigned char  aes_128_inv_sub_bytes_test_inputs[10*16] = 
{
	0x7a, 0x9f, 0x10, 0x27, 0x89, 0xd5, 0xf5, 0x0b, 0x2b, 0xef, 0xfd, 0x9f, 0x3d, 0xca, 0x4e, 0xa7,
	0x54, 0x11, 0xf4, 0xb5, 0x6b, 0xd9, 0x70, 0x0e, 0x96, 0xa0, 0x90, 0x2f, 0xa1, 0xbb, 0x9a, 0xa1,
	0x3e, 0x17, 0x50, 0x76, 0xb6, 0x1c, 0x04, 0x67, 0x8d, 0xfc, 0x22, 0x95, 0xf6, 0xa8, 0xbf, 0xc0,
	0xb4, 0x15, 0xf8, 0x01, 0x68, 0x58, 0x55, 0x2e, 0x4b, 0xb6, 0x12, 0x4c, 0x5f, 0x99, 0x8a, 0x4c,
	0xe8, 0x47, 0xf5, 0x65, 0x14, 0xda, 0xdd, 0xe2, 0x3f, 0x77, 0xb6, 0x4f, 0xe7, 0xf7, 0xd4, 0x90,
	0x36, 0x40, 0x09, 0x26, 0xf9, 0x33, 0x6d, 0x2d, 0x9f, 0xb5, 0x9d, 0x23, 0xc4, 0x2c, 0x39, 0x50,
	0x2d, 0xfb, 0x02, 0x34, 0x3f, 0x6d, 0x12, 0xdd, 0x09, 0x33, 0x7e, 0xc7, 0x5b, 0x36, 0xe3, 0xf0,
	0x3b, 0x59, 0xcb, 0x73, 0xfc, 0xd9, 0x0e, 0xe0, 0x57, 0x74, 0x22, 0x2d, 0xc0, 0x67, 0xfb, 0x68,
	0xa7, 0x61, 0xca, 0x9b, 0x97, 0xbe, 0x8b, 0x45, 0xd8, 0xad, 0x1a, 0x61, 0x1f, 0xc9, 0x73, 0x69,
	0x63, 0xca, 0xb7, 0x04, 0x09, 0x53, 0xd0, 0x51, 0xcd, 0x60, 0xe0, 0xe7, 0xba, 0x70, 0xe1, 0x8c
};

static const unsigned char  aes_128_inv_sub_bytes_test_outputs[10*16] = 
{
	0xbd, 0x6e, 0x7c, 0x3d, 0xf2, 0xb5, 0x77, 0x9e, 0x0b, 0x61, 0x21, 0x6e, 0x8b, 0x10, 0xb6, 0x89,
	0xfd, 0xe3, 0xba, 0xd2, 0x05, 0xe5, 0xd0, 0xd7, 0x35, 0x47, 0x96, 0x4e, 0xf1, 0xfe, 0x37, 0xf1,
	0xd1, 0x87, 0x6c, 0x0f, 0x79, 0xc4, 0x30, 0x0a, 0xb4, 0x55, 0x94, 0xad, 0xd6, 0x6f, 0xf4, 0x1f,
	0xc6, 0x2f, 0xe1, 0x09, 0xf7, 0x5e, 0xed, 0xc3, 0xcc, 0x79, 0x39, 0x5d, 0x84, 0xf9, 0xcf, 0x5d,
	0xc8, 0x16, 0x77, 0xbc, 0x9b, 0x7a, 0xc9, 0x3b, 0x25, 0x02, 0x79, 0x92, 0xb0, 0x26, 0x19, 0x96,
	0x24, 0x72, 0x40, 0x23, 0x69, 0x66, 0xb3, 0xfa, 0x6e, 0xd2, 0x75, 0x32, 0x88, 0x42, 0x5b, 0x6c,
	0xfa, 0x63, 0x6a, 0x28, 0x25, 0xb3, 0x39, 0xc9, 0x40, 0x66, 0x8a, 0x31, 0x57, 0x24, 0x4d, 0x17,
	0x49, 0x15, 0x59, 0x8f, 0x55, 0xe5, 0xd7, 0xa0, 0xda, 0xca, 0x94, 0xfa, 0x1f, 0x0a, 0x63, 0xf7,
	0x89, 0xd8, 0x10, 0xe8, 0x85, 0x5a, 0xce, 0x68, 0x2d, 0x18, 0x43, 0xd8, 0xcb, 0x12, 0x8f, 0xe4,
	0x00, 0x10, 0x20, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0xa0, 0xb0, 0xc0, 0xd0, 0xe0, 0xf0
};


/*
 * SHIFT ROWS
 */

static const unsigned char  aes_128_shift_rows_test_inputs[10*16] = 
{
0x63, 0xca, 0xb7, 0x04, 0x09, 0x53, 0xd0, 0x51, 0xcd, 0x60, 0xe0, 0xe7, 0xba, 0x70, 0xe1, 0x8c,
0xa7, 0x61, 0xca, 0x9b, 0x97, 0xbe, 0x8b, 0x45, 0xd8, 0xad, 0x1a, 0x61, 0x1f, 0xc9, 0x73, 0x69,
0x3b, 0x59, 0xcb, 0x73, 0xfc, 0xd9, 0x0e, 0xe0, 0x57, 0x74, 0x22, 0x2d, 0xc0, 0x67, 0xfb, 0x68,
0x2d, 0xfb, 0x02, 0x34, 0x3f, 0x6d, 0x12, 0xdd, 0x09, 0x33, 0x7e, 0xc7, 0x5b, 0x36, 0xe3, 0xf0,
0x36, 0x40, 0x09, 0x26, 0xf9, 0x33, 0x6d, 0x2d, 0x9f, 0xb5, 0x9d, 0x23, 0xc4, 0x2c, 0x39, 0x50,
0xe8, 0x47, 0xf5, 0x65, 0x14, 0xda, 0xdd, 0xe2, 0x3f, 0x77, 0xb6, 0x4f, 0xe7, 0xf7, 0xd4, 0x90,
0xb4, 0x15, 0xf8, 0x01, 0x68, 0x58, 0x55, 0x2e, 0x4b, 0xb6, 0x12, 0x4c, 0x5f, 0x99, 0x8a, 0x4c,
0x3e, 0x17, 0x50, 0x76, 0xb6, 0x1c, 0x04, 0x67, 0x8d, 0xfc, 0x22, 0x95, 0xf6, 0xa8, 0xbf, 0xc0,
0x54, 0x11, 0xf4, 0xb5, 0x6b, 0xd9, 0x70, 0x0e, 0x96, 0xa0, 0x90, 0x2f, 0xa1, 0xbb, 0x9a, 0xa1,
0x7a, 0x9f, 0x10, 0x27, 0x89, 0xd5, 0xf5, 0x0b, 0x2b, 0xef, 0xfd, 0x9f, 0x3d, 0xca, 0x4e, 0xa7
};

static const unsigned char  aes_128_shift_rows_test_outputs[10*16] = 
{
0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f,
0x7a, 0xd5, 0xfd, 0xa7, 0x89, 0xef, 0x4e, 0x27, 0x2b, 0xca, 0x10, 0x0b, 0x3d, 0x9f, 0xf5, 0x9f
};

static const unsigned char  aes_128_inv_shift_rows_test_inputs[10*16] = 
{
0x7a, 0xd5, 0xfd, 0xa7, 0x89, 0xef, 0x4e, 0x27, 0x2b, 0xca, 0x10, 0x0b, 0x3d, 0x9f, 0xf5, 0x9f,
0x54, 0xd9, 0x90, 0xa1, 0x6b, 0xa0, 0x9a, 0xb5, 0x96, 0xbb, 0xf4, 0x0e, 0xa1, 0x11, 0x70, 0x2f,
0x3e, 0x1c, 0x22, 0xc0, 0xb6, 0xfc, 0xbf, 0x76, 0x8d, 0xa8, 0x50, 0x67, 0xf6, 0x17, 0x04, 0x95,
0xb4, 0x58, 0x12, 0x4c, 0x68, 0xb6, 0x8a, 0x01, 0x4b, 0x99, 0xf8, 0x2e, 0x5f, 0x15, 0x55, 0x4c,
0xe8, 0xda, 0xb6, 0x90, 0x14, 0x77, 0xd4, 0x65, 0x3f, 0xf7, 0xf5, 0xe2, 0xe7, 0x47, 0xdd, 0x4f,
0x36, 0x33, 0x9d, 0x50, 0xf9, 0xb5, 0x39, 0x26, 0x9f, 0x2c, 0x09, 0x2d, 0xc4, 0x40, 0x6d, 0x23,
0x2d, 0x6d, 0x7e, 0xf0, 0x3f, 0x33, 0xe3, 0x34, 0x09, 0x36, 0x02, 0xdd, 0x5b, 0xfb, 0x12, 0xc7,
0x3b, 0xd9, 0x22, 0x68, 0xfc, 0x74, 0xfb, 0x73, 0x57, 0x67, 0xcb, 0xe0, 0xc0, 0x59, 0x0e, 0x2d,
0xa7, 0xbe, 0x1a, 0x69, 0x97, 0xad, 0x73, 0x9b, 0xd8, 0xc9, 0xca, 0x45, 0x1f, 0x61, 0x8b, 0x61,
0x63, 0x53, 0xe0, 0x8c, 0x09, 0x60, 0xe1, 0x04, 0xcd, 0x70, 0xb7, 0x51, 0xba, 0xca, 0xd0, 0xe7,
};

static const unsigned char  aes_128_inv_shift_rows_test_outputs[10*16] = 
{
0x7a, 0x9f, 0x10, 0x27, 0x89, 0xd5, 0xf5, 0x0b, 0x2b, 0xef, 0xfd, 0x9f, 0x3d, 0xca, 0x4e, 0xa7,
0x54, 0x11, 0xf4, 0xb5, 0x6b, 0xd9, 0x70, 0x0e, 0x96, 0xa0, 0x90, 0x2f, 0xa1, 0xbb, 0x9a, 0xa1,
0x3e, 0x17, 0x50, 0x76, 0xb6, 0x1c, 0x04, 0x67, 0x8d, 0xfc, 0x22, 0x95, 0xf6, 0xa8, 0xbf, 0xc0,
0xb4, 0x15, 0xf8, 0x01, 0x68, 0x58, 0x55, 0x2e, 0x4b, 0xb6, 0x12, 0x4c, 0x5f, 0x99, 0x8a, 0x4c,
0xe8, 0x47, 0xf5, 0x65, 0x14, 0xda, 0xdd, 0xe2, 0x3f, 0x77, 0xb6, 0x4f, 0xe7, 0xf7, 0xd4, 0x90,
0x36, 0x40, 0x09, 0x26, 0xf9, 0x33, 0x6d, 0x2d, 0x9f, 0xb5, 0x9d, 0x23, 0xc4, 0x2c, 0x39, 0x50,
0x2d, 0xfb, 0x02, 0x34, 0x3f, 0x6d, 0x12, 0xdd, 0x09, 0x33, 0x7e, 0xc7, 0x5b, 0x36, 0xe3, 0xf0,
0x3b, 0x59, 0xcb, 0x73, 0xfc, 0xd9, 0x0e, 0xe0, 0x57, 0x74, 0x22, 0x2d, 0xc0, 0x67, 0xfb, 0x68,
0xa7, 0x61, 0xca, 0x9b, 0x97, 0xbe, 0x8b, 0x45, 0xd8, 0xad, 0x1a, 0x61, 0x1f, 0xc9, 0x73, 0x69,
0x63, 0xca, 0xb7, 0x04, 0x09, 0x53, 0xd0, 0x51, 0xcd, 0x60, 0xe0, 0xe7, 0xba, 0x70, 0xe1, 0x8c
};







#endif /* _AES_128_KNOWN_VECTORS_H_ */